name: Manual NPM Publish

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: "Release type - major, minor or patch"
        required: true
        type: choice
        default: "patch"
        options:
          - patch
          - minor
          - major
      distTag:
        description: 'NPM tag (e.g. use "next --preRelease=alpha --github.preRelease" to release a test version)'
        required: true
        default: 'latest'
      preRelease:
        description: If latest release was a pre-release (e.g. X.X.X-alpha.0) and you want to push another one, pick "yes"
        required: true
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_CONFIG_PROVENANCE: true

jobs:
  authorize:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.0.0
        with:
          route: GET /orgs/:organisation/teams/:team/memberships/${{ github.actor }}
          team: technical-steering-committee
          organisation: webdriverio
        env:
          GITHUB_TOKEN: ${{ secrets.WDIO_BOT_GITHUB_TOKEN }}
  release:
    needs: [authorize]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'v9'
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: NPM Setup
        run: |
          npm set registry "https://registry.npmjs.org/"
          npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
          npm whoami
      - name: Git Setup
        run: |
          git config --global user.email "bot@webdriver.io"
          git config --global user.name "WebdriverIO Release Bot"
      - name: Install Dependencies
        run: npm ci --force
      - name: Build Project
        run: npm run build
        env:
          NODE_ENV: production
      - name: Release
        run: npx release-it ${{github.event.inputs.releaseType}} --github.release --ci --npm.skipChecks --no-git.requireCleanWorkingDir --npm.tag=${{github.event.inputs.distTag}}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event.inputs.preRelease == 'no' }}
      - name: Pre-Release
        run: npx release-it --github.release --ci --npm.skipChecks --no-git.requireCleanWorkingDir --preRelease=alpha --github.preRelease --npm.tag=next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event.inputs.preRelease == 'yes' }}
